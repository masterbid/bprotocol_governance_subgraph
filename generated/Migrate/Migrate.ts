// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Executed extends ethereum.Event {
  get params(): Executed__Params {
    return new Executed__Params(this);
  }
}

export class Executed__Params {
  _event: Executed;

  constructor(event: Executed) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewProposal extends ethereum.Event {
  get params(): NewProposal__Params {
    return new NewProposal__Params(this);
  }
}

export class NewProposal__Params {
  _event: NewProposal;

  constructor(event: NewProposal) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Queued extends ethereum.Event {
  get params(): Queued__Params {
    return new Queued__Params(this);
  }
}

export class Queued__Params {
  _event: Queued;

  constructor(event: Queued) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class VoteCancelled extends ethereum.Event {
  get params(): VoteCancelled__Params {
    return new VoteCancelled__Params(this);
  }
}

export class VoteCancelled__Params {
  _event: VoteCancelled;

  constructor(event: VoteCancelled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get score(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Voted extends ethereum.Event {
  get params(): Voted__Params {
    return new Voted__Params(this);
  }
}

export class Voted__Params {
  _event: Voted;

  constructor(event: Voted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get score(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Migrate__proposalsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;

  constructor(value0: BigInt, value1: BigInt, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }
}

export class Migrate extends ethereum.SmartContract {
  static bind(address: Address): Migrate {
    return new Migrate("Migrate", address);
  }

  DELAY(): BigInt {
    let result = super.call("DELAY", "DELAY():(uint256)", []);

    return result[0].toBigInt();
  }

  try_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("DELAY", "DELAY():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executor(): Address {
    let result = super.call("executor", "executor():(address)", []);

    return result[0].toAddress();
  }

  try_executor(): ethereum.CallResult<Address> {
    let result = super.tryCall("executor", "executor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  jarConnector(): Address {
    let result = super.call("jarConnector", "jarConnector():(address)", []);

    return result[0].toAddress();
  }

  try_jarConnector(): ethereum.CallResult<Address> {
    let result = super.tryCall("jarConnector", "jarConnector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposals(param0: BigInt): Migrate__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(uint256,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Migrate__proposalsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress()
    );
  }

  try_proposals(param0: BigInt): ethereum.CallResult<Migrate__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(uint256,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Migrate__proposalsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress()
      )
    );
  }

  propose(newOwner: Address): BigInt {
    let result = super.call("propose", "propose(address):(uint256)", [
      ethereum.Value.fromAddress(newOwner)
    ]);

    return result[0].toBigInt();
  }

  try_propose(newOwner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("propose", "propose(address):(uint256)", [
      ethereum.Value.fromAddress(newOwner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get jarConnector_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get registry_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get executor_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelVoteCall extends ethereum.Call {
  get inputs(): CancelVoteCall__Inputs {
    return new CancelVoteCall__Inputs(this);
  }

  get outputs(): CancelVoteCall__Outputs {
    return new CancelVoteCall__Outputs(this);
  }
}

export class CancelVoteCall__Inputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelVoteCall__Outputs {
  _call: CancelVoteCall;

  constructor(call: CancelVoteCall) {
    this._call = call;
  }
}

export class ExecuteProposalCall extends ethereum.Call {
  get inputs(): ExecuteProposalCall__Inputs {
    return new ExecuteProposalCall__Inputs(this);
  }

  get outputs(): ExecuteProposalCall__Outputs {
    return new ExecuteProposalCall__Outputs(this);
  }
}

export class ExecuteProposalCall__Inputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteProposalCall__Outputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class QueueProposalCall extends ethereum.Call {
  get inputs(): QueueProposalCall__Inputs {
    return new QueueProposalCall__Inputs(this);
  }

  get outputs(): QueueProposalCall__Outputs {
    return new QueueProposalCall__Outputs(this);
  }
}

export class QueueProposalCall__Inputs {
  _call: QueueProposalCall;

  constructor(call: QueueProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QueueProposalCall__Outputs {
  _call: QueueProposalCall;

  constructor(call: QueueProposalCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
